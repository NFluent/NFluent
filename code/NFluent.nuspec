<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>NFluent</id>
    <title>NFluent, smooth your .NET TDD experience!</title>
    <version>3.0.0-alpha-0000</version>
    <authors>Thomas PIERRAIN, Cyrille DUPUYDAUBY, Rui CARVALHO, Marc-Antoine LATOUR</authors>
    <owners>Thomas PIERRAIN</owners>
    <license type="expression">Apache-2.0</license>
    <projectUrl>http://www.n-fluent.net</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!--icon>images\Icon.png</icon-->
    <description>NFluent is an ergonomic check library which aims to fluent your .NET TDD experience (based on simple Check.That() check statements). NFluent aims your tests to be fluent to write (with an happy 'dot' auto completion experience), fluent to read (i.e. as close as possible to plain English expression), but also fluent to troubleshoot, in a less-error-prone way comparing to the classical .NET test frameworks. NFluent is directly, but also freely, inspired by the awesome Java FEST fluent check/reflection library (http://fest.easytesting.org/).</description>
    <summary>NFluent is an ergonomic check library which aims to fluent your .NET TDD experience.</summary>
    <releaseNotes># V 3.0.0
## Major changes
* You can provide anonymous types and tuples when using IsEqualTo against any type. The check will be made against all
_sut_'s propertie.
* Dropped support for Net Framework 2.0, 3.0, and 4.0. NFluent supports Net 3.5 SP1, Net. 4.5.2 +, Net Standard 1.3+ and Net Standard 2.0+.
If you can't upgrade your framework version to a supported one, please use NFluent 2.7.1.
* `Check.ThatEnum`has been removed. You must use `Check.That` instead.
## New Checks
* `Is`: Checks if _sut == expected_. This is a strongly typed equivalent to `IsEqualTo`.
* `IsGreaterOrEqualThan`: Checks if _sut_ &gt;= _expected_.
* `IsLessOrEqualThan`: Checks if _sut_ &lt;= _expected_.
## New feautres
* You can provide custom comparer for any type, using `Check.RegisterComparer` like this `Check.Register&lt;MyType&gt;(MyCustomComparer)`.
You can also use `RegisterLocalComparer` to limit its usage to a declaration scope.
## Breaking changes
* Equality logic changed for `IDictionary`: dictionaries are considered equals if they have the same keys and
the same values for each key. In NFluent V2, entries needed to be declared in the some order or else they were considered as **different** but **equivalent**.
* You need to specify
* `IsAnInstanceOf&lt;nullableType&gt;(null)` now fails (with an appropriate message). Previously, it did succeed. But,
as captured in issue #68, this behavior was triggered by a bug and kept due to a poor error message when fixed.
* The `IStructCheck&lt;T&gt;` interface has been removed as well as associated extensibility helper. Those were dedicated
to value `types`, you can migrate your existing extensions to the `ICheck&lt;T&gt;` type instead. Please open an issue if
you need help.
## Fixes
* HasFieldWithSameValues resulted in false positive when string fields had the same value.
* IsNotEqualTo now properly preserves expected type
* Improved rerporting of differences for enumerations and dictionaries to make them more consistent and fixed some inaccuracies.
# GitHub Issues
* #325, #327, #330, #332
### Obsolete
#### Marked as obsolet
* `ThatAsynCode`: you can now use `ThatCode` even for async methods.
Here is the list of methods, classes and other obsolete stuff that have been removed in this version as well
as workaround advices.
* Drop support for Net 2.0 and 3.0: keep using NFluent V2.x versions if you support for these.
* `ILambdaCheck`: the definition was kept to prevent breaking build, but it was no longer used. If this is a
problem for you, open an issue
* `IsPositive` (available for numbers): please use `IsStrictlyPositive` instead.
* `IsNegative` (available for numbers): please use `IsStrictlyNegative` instead.
* `IsLessThan` (available for numbers): please use `IsStrictlyNegative` instead.
* `IsGreaterThan` (available for numbers): please use `IsStrictlyGreaterThan` instead.
* `IsSameReferenceThan`: please use `IsSameReferenceAs` instead.
* `HasFieldsEqualToThose`: please use `HasFieldsWithSameValues` instead.
* `HasFieldsNotEqualToThose`: please use `HasNotFieldsWithSameValues` instead.
* `IsAFaillingCheckWithMessage`: please use `IsAFailingCheckWithMessage` instead.
* `IsAFaillingCheck`: please use `IsAFailingCheck` instead.
* `Properties` (available for enumeration): please use `Extracting` instead.
* `Checker.BuildLinkWhich` (used for custom extension): please use `ExtensibilityHelper.BuildCheckLinkWhich` instead.
* `Checker.ExecuteCheckAndProvideSubItem` (used for custom extension): please 'ExtensibilityHelper' static class methods instead.
# V 2.7.1
# Fixes
* HasFieldsWithSameValues failed to properly compare when the expected value contained duplicate string.
More generally, instances where only checked once for equality; any subsequent check was assumed to be succesful.
This could lead to false positive (i.e. checks succeeded when it should have failed).
This regression was introduced by V 2.2.0 in 02/2018. Sorry about that.
# GitHub Issues
* #331</releaseNotes>
    <copyright>Copyright 2013-2021 Thomas PIERRAIN, Cyrille DUPUYDAUBY</copyright>
    <language>en-US</language>
    <tags>tdd bdd test fluent check checks easy nunit xunit mbunit mstestsucks</tags>
    <dependencies>
      <group targetFramework=".NETStandard2.0" />
      <group targetFramework=".NETFramework4.6" />
      <group targetFramework=".NETFramework3.5" />
    </dependencies>
  </metadata>
  <files>
    <!-- Images -->
    <file src="..\Images\icon.png" target="images\" />
    <!-- Core -->
    <file src="Artifacts\Binaries\netstandard2.0\NFluent.dll" target="lib\netstandard2.0\" />
    <file src="Artifacts\Binaries\netstandard2.0\NFluent.xml" target="lib\netstandard2.0\" />
    <file src="Artifacts\Binaries\netstandard2.0\NFluent.pdb" target="lib\netstandard2.0\" />
    <!-- .NET 4.5 (for dynamics and tasks support) -->
    <file src="Artifacts\Binaries\net46\NFluent.dll" target="lib\net46\" />
    <file src="Artifacts\Binaries\net46\NFluent.xml" target="lib\net46\" />
    <file src="Artifacts\Binaries\net46\NFluent.pdb" target="lib\net46\" />
    <!-- .NET 3.5 -->
    <file src="Artifacts\Binaries\net35\NFluent.dll" target="lib\net35\" />
    <file src="Artifacts\Binaries\net35\NFluent.xml" target="lib\net35\" />
    <file src="Artifacts\Binaries\net35\NFluent.pdb" target="lib\net35\" />
  </files>
</package>